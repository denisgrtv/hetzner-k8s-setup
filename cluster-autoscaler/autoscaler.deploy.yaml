apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-autoscaler
  namespace: kube-system
  labels:
    app: cluster-autoscaler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cluster-autoscaler
  template:
    metadata:
      labels:
        app: cluster-autoscaler
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8085'
    spec:
      serviceAccountName: cluster-autoscaler
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
      # Node affinity is used to force cluster-autoscaler to stick
      # to the master node. This allows the cluster to reliably downscale
      # to zero worker nodes when needed.
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
      containers:
        - image: bitnami/cluster-autoscaler:1.27.2
          name: cluster-autoscaler
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 300Mi
          # --nodes=min:max:instance_type:location:pool
          # Pool name adds tags to created nodes
          command:
            - ./cluster-autoscaler
            - --cloud-provider=hetzner
            - --stderrthreshold=info
            - --nodes=0:10:CX21:nbg1:k8s
          env:
          - name: HCLOUD_TOKEN
            valueFrom:
                secretKeyRef:
                  name: hcloud
                  key: token
          - name: HCLOUD_CLOUD_INIT
            value: <base64 encoded init command>
          - name: HCLOUD_SSH_KEY
            value: <ssh key name>
          - name: HCLOUD_NETWORK
            value: <network name>
          - name: HCLOUD_IMAGE
          # Ex. snapshot tag k8s-image=true
            value: <image name>
          - name: HCLOUD_FIREWALL
            value: <firewall name>
          # If you don't not need public IP
          # - name: HCLOUD_PUBLIC_IPV4
          #   value: 'false'
          - name: HCLOUD_PUBLIC_IPV6
            value: 'false'

          imagePullPolicy: "Always"
